<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.etl.ds.core.mapper.TaskMapper">
    <resultMap id="BaseResultMap" type="com.etl.ds.core.entity.Task">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="content" jdbcType="CHAR" property="content"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
        <result column="workflow_id" jdbcType="INTEGER" property="workflowId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="priority" jdbcType="INTEGER" property="priority"/>
    </resultMap>
    <sql id="Base_Column_List">
        `id`, `name`, `type`, `content`, `level`, `version`, `is_delete`, `workflow_id`,
    `create_time`, `update_time`,priority
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `t_task`
        where `id` = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from `t_task`
        where `id` = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.etl.ds.core.entity.Task">
        insert into `t_task` (`id`, `name`, `type`,
                              `content`, `level`, `version`,
                              `is_delete`, `workflow_id`, `priority`)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT},
                #{content,jdbcType=CHAR}, #{level,jdbcType=INTEGER}, #{version,jdbcType=INTEGER},
                #{isDelete,jdbcType=TINYINT}, #{workflowId,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.etl.ds.core.entity.Task">
        insert into `t_task`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="content != null">
                `content`,
            </if>
            <if test="level != null">
                `level`,
            </if>
            <if test="version != null">
                `version`,
            </if>
            <if test="isDelete != null">
                `is_delete`,
            </if>
            <if test="workflowId != null">
                `workflow_id`,
            </if>
            <if test="priority != null">
                `priority`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="content != null">
                #{content,jdbcType=CHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="workflowId != null">
                #{workflowId,jdbcType=INTEGER},
            </if>
            <if test="priority != null">
                #{priority,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.etl.ds.core.entity.Task">
        update `t_task`
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=TINYINT},
            </if>
            <if test="content != null">
                `content` = #{content,jdbcType=CHAR},
            </if>
            <if test="level != null">
                `level` = #{level,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                `version` = #{version,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                `is_delete` = #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="workflowId != null">
                `workflow_id` = #{workflowId,jdbcType=INTEGER},
            </if>
            <if test="priority != null">
                `priority` = #{priority,jdbcType=INTEGER},
            </if>
        </set>
        where `id` = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.etl.ds.core.entity.Task">
        update `t_task`
        set `name`        = #{name,jdbcType=VARCHAR},
            `type`        = #{type,jdbcType=TINYINT},
            `content`     = #{content,jdbcType=CHAR},
            `level`       = #{level,jdbcType=INTEGER},
            `version`     = #{version,jdbcType=INTEGER},
            `is_delete`   = #{isDelete,jdbcType=TINYINT},
            `workflow_id` = #{workflowId,jdbcType=INTEGER}
        where `id` = #{id,jdbcType=INTEGER}
    </update>
    <select id="findByWorkflowId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `t_task`
        where workflow_id = #{workflowId,jdbcType=INTEGER}
        order by level asc
    </select>

    <select id="findActiveByWorkflowIdList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `t_task`
        where workflow_id IN
        <foreach collection="workflowIdList" item="it" open="(" close=")" separator=",">
            #{it}
        </foreach>
        and is_delete = 0
    </select>

    <select id="findActiveByWorkflowId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `t_task`
        where workflow_id = #{workflowId,jdbcType=INTEGER}
        and is_delete = 0
        order by level asc
    </select>

    <select id="findAllActive" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `t_task`
        where is_delete = 0
        order by level asc
    </select>

    <select id="findRefluxByWorkflowId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `t_task`
        where workflow_id = #{workflowId,jdbcType=INTEGER}
        and type = 1
        and is_delete = 0
        order by level asc
    </select>

    <select id="findByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `t_task`
        where id in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        order by level asc
    </select>

    <select id="selectLastByName" resultMap="BaseResultMap">
        select a.*
        from t_task a
        join (
        select max(id) as id
        from t_task
        where is_delete=0
        and name in
        <foreach collection="names" open="(" close=")" separator="," item="it">
            #{it}
        </foreach>
        group by name
        ) as b on a.id=b.id;
    </select>

    <select id="findActiveByEnv" resultMap="BaseResultMap">
        select t.`id`,
               t.`name`,
               t.`type`,
               t.`content`,
               t.`level`,
               t.`version`,
               t.`is_delete`,
               t.`workflow_id`,
               t.`create_time`,
               t.`update_time`,
               t.`priority`
        from `t_task` t
                 join `t_workflow` wf on t.workflow_id = wf.id and wf.is_delete = 0 and wf.env = #{env,jdbcType=INTEGER}
        where t.is_delete = 0
        order by t.level asc
    </select>

</mapper>